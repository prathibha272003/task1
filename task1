# Install required libraries
# pip install PyPDF2 langchain sentence-transformers faiss-cpu openai

import PyPDF2
from langchain.embeddings import SentenceTransformerEmbeddings
from langchain.vectorstores import FAISS
from langchain.llms import OpenAI
from langchain.chains import RetrievalQA

# **Step 1: Data Ingestion**
# Extract text from PDF
def extract_text_from_pdf(pdf_file):
    text = ""
    with open(pdf_file, 'rb') as file:
        reader = PyPDF2.PdfReader(file)
        for page in reader.pages:
            text += page.extract_text()
    return text

# Chunk text into manageable sections
def chunk_text(text, chunk_size=500):
    chunks = []
    words = text.split()
    for i in range(0, len(words), chunk_size):
        chunk = " ".join(words[i:i + chunk_size])
        chunks.append(chunk)
    return chunks

# Convert chunks to embeddings
def embed_and_store(chunks):
    embeddings_model = SentenceTransformerEmbeddings(model_name="all-MiniLM-L6-v2")
    vector_store = FAISS.from_texts(chunks, embeddings_model)
    return vector_store

# **Step 2: Query Handling and Response Generation**
def query_pdf(vector_store, query, api_key):
    llm = OpenAI(model="text-davinci-003", openai_api_key=api_key)
    qa_chain = RetrievalQA.from_chain_type(llm=llm, retriever=vector_store.as_retriever())
    response = qa_chain.run(query)
    return response

# **Step 3: Example Usage**
if __name__ == "__main__":
    # Input PDF
    pdf_path = "example.pdf"  # Replace with your PDF file path
    api_key = "your-openai-api-key"  # Replace with your OpenAI API key

    # Extract, chunk, and embed PDF data
    print("Extracting and processing PDF...")
    pdf_text = extract_text_from_pdf(pdf_path)
    text_chunks = chunk_text(pdf_text)
    vector_store = embed_and_store(text_chunks)
    print("PDF data stored in vector database.")

    # Query the PDF
    user_query = "What is the unemployment rate for bachelor's degrees?"  # Example query
    print("\nQuerying PDF...")
    response = query_pdf(vector_store, user_query, api_key)
    print("\nResponse:")
    print(response)
